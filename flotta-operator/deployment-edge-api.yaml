apiVersion: apps/v1
kind: Deployment
metadata: # kpt-merge: flotta/flotta-edge-api
  labels:
    app: flotta-edge-api
  name: flotta-edge-api
  namespace: flotta
  annotations:
    internal.kpt.dev/upstream-identifier: 'apps|Deployment|flotta|flotta-edge-api'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flotta-edge-api
  template:
    metadata:
      labels:
        app: flotta-edge-api
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.11.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - command:
        - /flotta-edge-api
        envFrom:
        - configMapRef:
            name: flotta-edge-api-config
        image: docker.io/vitu1/edge-api:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        name: http
        ports:
        - containerPort: 8043
          name: yggds
        - containerPort: 8080
          name: metrics
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /readyz
            port: 8080
          periodSeconds: 10
      securityContext:
        runAsNonRoot: true
      serviceAccountName: flotta-edge-api
      terminationGracePeriodSeconds: 10
